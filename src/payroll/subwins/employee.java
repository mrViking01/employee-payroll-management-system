/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package payroll.subwins;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import payroll.main.db;
import payroll.main.emp;
import payroll.secSubWins.*;
/**
 *
 * @author ASUS
 */
public class employee extends javax.swing.JDialog {
    Connection conn, conn1, conn2, conn3, conn4;
    PreparedStatement pst, pst1, pst2, pst3, pst4;
    ResultSet rs, rs1, rs2, rs3, rs4;
    Double deduc1 = 0.0;
    Double deduc2 = 0.0;
    Double deduc3 = 0.0;
    Double deduc4 = 0.0;
    double rate, excess, basicex;
    Properties prop = new Properties();
    Double philhealthrate;
    String filename = null;
    byte[] person_image = null;
    int state,month,day,year;
    /**
     * Creates new form employee
     */
    public employee(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        table();
        save.setEnabled(false);
        cancel.setEnabled(false);
        attach.setEnabled(false);
        philhealthrate = Double.parseDouble(getValue("v11"));
    }
    
    
    public void table(){
        try{
                conn = db.db();
                pst = conn.prepareStatement("SELECT * FROM payroll_schema.emp_tbl;");
                rs = pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e){JOptionPane.showMessageDialog(null, e);}
           try{
                conn = db.db();
                pst = conn.prepareStatement("SELECT * FROM payroll_schema.position_tbl;");
                rs = pst.executeQuery();
                
                while(rs.next()){
                    po.addItem(rs.getString(1));
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        refresh4 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        img = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        empid1 = new javax.swing.JTextField();
        empln = new javax.swing.JTextField();
        empfn = new javax.swing.JTextField();
        birthday = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        empmn = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        sex = new javax.swing.JComboBox<>();
        ms = new javax.swing.JComboBox<>();
        religion = new javax.swing.JComboBox<>();
        citizenship = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        contact_no = new javax.swing.JTextField();
        email_add = new javax.swing.JTextField();
        cAddress = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        pAddress = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Jlabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameicoe = new javax.swing.JTextField();
        relicoe = new javax.swing.JTextField();
        conicoe = new javax.swing.JTextField();
        addicoe = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        sar = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        doc = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        noc = new javax.swing.JTextField();
        bs = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        po = new javax.swing.JComboBox<>();
        de = new javax.swing.JComboBox<>();
        status = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        piid = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        sssid = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        phid = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        tinid = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        newemp = new javax.swing.JButton();
        editemp = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        save = new javax.swing.JButton();
        attach = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Employee");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Employee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseReleased(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "FirstName", "LastName", "Department", "Position"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.setShowHorizontalLines(false);
        table.setShowVerticalLines(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search ID:");

        id.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idKeyReleased(evt);
            }
        });

        refresh4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/images/refresh_update.png"))); // NOI18N
        refresh4.setToolTipText("Refresh");
        refresh4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(refresh4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(784, 11, 420, -1));

        img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jDesktopPane1.setLayer(img, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
        );

        jPanel1.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 34, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel32.setText("Date of Birth");

        jLabel33.setText("Employee's ID");

        jLabel34.setText("Gender");

        jLabel35.setText("Employee's Name");

        jLabel36.setText("Marital Status");

        empid1.setEditable(false);

        empln.setEditable(false);

        empfn.setEditable(false);

        birthday.setEditable(false);

        jLabel40.setText("Age");

        age.setEditable(false);
        age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ageKeyTyped(evt);
            }
        });

        jLabel41.setText("Religion");

        jLabel42.setText("Citizenship");

        empmn.setEditable(false);

        jLabel1.setText("lastname");

        jLabel10.setText("middlename");

        jLabel15.setText("firstname");

        sex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Female", "Male" }));

        ms.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Single", "Marraige" }));

        religion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Roman Catholic", "Protestants", "Muslims", "Iglesia ni Cristo", "Buddhists", "Other" }));

        citizenship.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Afghan", "Albanian", "Algerian", "American", "Andorran", "Angolan", "Antiguan", "Barbudan", "Argentine", "Armenian", "Aruban", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Basque", "Belarusian", "Belgian", "Belizean", "Beninese", "Bermudian", "Bhutanese", "Bolivian", "Bosniak", "Bosnian", "Herzegovinian", "Botswana", "Brazilian", "Breton", "British", "British Virgin Islander", "Bruneian", "Bulgarian", "Macedonian Bulgarian", "Burkinabé", "Burmese", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Catalan", "Cape Verdean", "Chadian", "Chilean", "Chinese", "Colombian", "Comorian", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Dane", "Greenlander", "Djiboutian", "Dominican (Commonwealth)", "Dominican (Republic)", "Dutch", "East Timorese", "Ecuadorian", "Egyptian", "Emirati", "English", "Equatoguinean", "Eritrean", "Estonian", "Ethiopian", "Falkland Islander", "Faroese", "Fijian", "Finn", "Finnish Swedish", "Filipino", "French citizen", "Gabonese", "Gambian", "Georgian", "German", "Baltic German", "Ghanaian", "Gibraltarian", "Greek", "Greek Macedonian", "Grenadian", "Guatemalan", "Guianese (French)", "Guineans", "Guinea-Bissau national", "Guyanese", "Haitian", "Honduran", "Hong Konger", "Hungarian", "Icelander", "I-Kiribati", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivoirian", "Jamaican", "Japanese", "Jordanian", "Kazakh", "Kenyan", "Korean", "Kosovar", "Kuwaiti", "Kyrgyz", "Lao", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourger", "Macao", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivian", "Malian", "Maltese", "Manx", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovans", "Monégasque", "Mongolians", "Montenegrin", "Moroccan", "Mozambican", "Namibian", "Nauran", "Nepalese", "New Zealander", "Nicaraguan", "Nigerien", "Nigerian", "Norwegian", "Omani", "Pakistani", "Palauan", "Palestinian", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Pole", "Portuguese", "Puerto Rican", "Qatari", "Quebecer", "Réunionnai", "Romanian", "Russian", "Baltic Russian", "Rwandan", "Saint Kitt", "Nevi", "Saint Lucian", "Salvadoran", "Sammarinese", "Samoan", "São Tomé", "Príncipe", "Saudi", "Scot", "Senegalese", "Serb", "Seychelloi", "Sierra Leonean", "Singaporean", "Slovak", "Slovene", "Solomon Islander", "Somali", "Somalilander", "Sotho", "South African", "Spaniards", "Sri Lankan", "Sudanese", "Surinamese", "Swazi", "Swede", "Swiss", "Syriac", "Syrian", "Taiwanese", "Tamil", "Tajik", "Tanzanian", "Thai", "Tibetan", "Tobagonian", "Togolese", "Tongan", "Trinidadian", "Tunisian", "Turk", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbek", "Vanuatuan", "Venezuelan", "Vietnamese", "Vincentian", "Welsh", "Yemeni", "Zambian", "Zimbabwean", "Aromanian", "Assyrian", "Basque", "Bengali", "Berber", "Boer", "Buryat", "Cajun", "Catalan", "Celt", "Chuvash", "Han Chinese", "Hispanic", "Latino American", "Hutu", "Igbo", "Indigenous Australian", "Indigenous people of the America", "First Nation", "Huaorani people", "Inuit", "Canadian Inuit", "Greenlandic Inuit", "Métis people", "Native American", "Malayali", "Kannadiga", "Karen", "Kodava", "Kurd", "Macedonian", "Malay", "Roma", "Sami", "Sikh", "Silesian", "Sindhi", "Sinhalese", "Syriac", "Tamil", "Tatar", "Tutsi", "Zulu" }));

        jLabel17.setText("mm/dd/year");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel33))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel35)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(empid1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(empln, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(22, 22, 22)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 4, Short.MAX_VALUE)
                                .addComponent(empfn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(empmn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(16, 16, 16)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42))
                        .addGap(4, 4, 4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(jLabel36))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(birthday, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(religion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ms, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(citizenship, 0, 203, Short.MAX_VALUE)
                            .addComponent(sex, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(empid1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(empmn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(empln, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(empfn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(birthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(citizenship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 199, -1, -1));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel3.setText("Contact No:");

        jLabel4.setText("Email Address:");

        jLabel6.setText("Current Address:");

        contact_no.setEditable(false);

        email_add.setEditable(false);

        cAddress.setEditable(false);

        jLabel8.setText("Permanent Address:");

        pAddress.setEditable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pAddress)
                    .addComponent(contact_no)
                    .addComponent(email_add)
                    .addComponent(cAddress))
                .addGap(29, 29, 29))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(contact_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(email_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(pAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 51, 338, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Detail In case of Emergency", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel5.setText("Relationship:");

        jLabel7.setText("Contact No:");

        Jlabel.setText("Address:");

        jLabel9.setText("Name:");

        nameicoe.setEditable(false);

        relicoe.setEditable(false);

        conicoe.setEditable(false);

        addicoe.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel5)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(Jlabel))
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addicoe, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(relicoe)
                    .addComponent(conicoe)
                    .addComponent(nameicoe))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(nameicoe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(relicoe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(conicoe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jlabel)
                    .addComponent(addicoe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 207, 338, -1));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employment Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel27.setText("Job Title/Position");

        jLabel28.setText("Department");

        jLabel29.setText("Date of Commencement");

        sar.setEditable(false);

        jLabel30.setText("Hourly Rate");

        doc.setEditable(false);

        jLabel38.setText("Status:");

        jLabel39.setText("No. of Child:");

        noc.setEditable(false);

        bs.setEditable(false);

        jLabel43.setText("Basic Salary");

        po.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        po.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poActionPerformed(evt);
            }
        });

        de.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Admin Office", "Accounting Office", "Marketing and Advertising Office", "Production and Inventory Office", "Sales Office" }));

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Active", "Inactive" }));

        jLabel16.setText("mm/dd/year");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel39)
                            .addComponent(jLabel38)
                            .addComponent(jLabel43)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel29)
                                .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(sar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(doc, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(de, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(po, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(bs, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(noc, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel16)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(po, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(de, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(doc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(784, 257, -1, -1));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Goverment ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel11.setText("Pag-ibig");

        piid.setEditable(false);

        jLabel12.setText("SSS");

        sssid.setEditable(false);

        jLabel13.setText("PhilHealth");

        phid.setEditable(false);

        jLabel14.setText("TIN");

        tinid.setEditable(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sssid, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(phid)
                    .addComponent(tinid)
                    .addComponent(piid))
                .addGap(66, 66, 66))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(piid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(sssid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(phid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tinid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 347, -1, -1));

        jPanel6.setBackground(new java.awt.Color(59, 89, 152));

        newemp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        newemp.setText("New");
        newemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newempActionPerformed(evt);
            }
        });

        editemp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editemp.setText("Edit");
        editemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editempActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        attach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payroll/images/attachment.png"))); // NOI18N
        attach.setToolTipText("Attach photo");
        attach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newemp, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editemp, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(attach, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(save, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attach, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 494, 1214, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refresh4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh4ActionPerformed
        // TODO add your handling code here:
        // <editor-fold defaultstate="collapsed" desc="Refresh Details of Employee">
        try{
            conn = db.db();
            pst = conn.prepareStatement("SELECT * FROM payroll_schema.emp_tbl;");
            rs = pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
                empid1.setText("");
                empfn.setText("");
                empln.setText("");
                empmn.setText("");
                age.setText("");
                birthday.setText("");
                sex.setSelectedIndex(0);
                ms.setSelectedIndex(0);
                religion.setSelectedIndex(0);
                citizenship.setSelectedIndex(0);
                contact_no.setText("");
                email_add.setText("");
                cAddress.setText("");
                pAddress.setText("");
                nameicoe.setText("");
                relicoe.setText("");
                conicoe.setText("");
                addicoe.setText("");
                piid.setText("");
                sssid.setText("");
                phid.setText("");
                tinid.setText("");
                po.setSelectedIndex(0);
                de.setSelectedIndex(0);
                
                doc.setText("");
                sar.setText("");
                bs.setText("");
                status.setSelectedIndex(0);
                noc.setText("");
                id.setText("");
                img.setIcon(null);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        //</editor-fold>
    }//GEN-LAST:event_refresh4ActionPerformed

    private void idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyReleased
        // TODO add your handling code here:
        // <editor-fold defaultstate="collapsed" desc="Search by Typing ID">
        if(!(evt.getKeyCode() == KeyEvent.VK_ENTER)){
        if(id.getText().equals("")){
            try{
                conn = db.db();
                pst = conn.prepareStatement("SELECT * FROM payroll_schema.emp_tbl;");
                rs = pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
                empid1.setText("");
                empfn.setText("");
                empln.setText("");
                empmn.setText("");
                age.setText("");
                birthday.setText("");
                sex.setSelectedIndex(0);
                ms.setSelectedIndex(0);
                religion.setSelectedIndex(0);
                citizenship.setSelectedIndex(0);
                contact_no.setText("");
                email_add.setText("");
                cAddress.setText("");
                pAddress.setText("");
                nameicoe.setText("");
                relicoe.setText("");
                conicoe.setText("");
                addicoe.setText("");
                piid.setText("");
                sssid.setText("");
                phid.setText("");
                tinid.setText("");
                po.setSelectedIndex(0);
                de.setSelectedIndex(0);
                doc.setText("");
                sar.setText("");
                bs.setText("");
                status.setSelectedIndex(0);
                noc.setText("");
                id.setText("");
                img.setIcon(null);
            }
            catch(Exception e){}

        }else{
            String srid = id.getText();
            try{
                conn = db.db();
                pst = conn.prepareStatement("SELECT * FROM payroll_schema.emp_tbl WHERE emp_id like'%"+srid+"%';");
                rs = pst.executeQuery();
                table.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e){JOptionPane.showMessageDialog(null, "OOPS!!! Something Went Wrong, Can't Display The Whole Details");}
            

        }
        }
        // </editor-fold>
    }//GEN-LAST:event_idKeyReleased

    private void jScrollPane1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseReleased

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased
        // TODO add your handling code here:
        // <editor-fold defaultstate="collapsed" desc="Click the Table to Display Details">
        DefaultTableModel pm = (DefaultTableModel)table.getModel();
        int sr = table.getSelectedRow();
        empfn.setText(pm.getValueAt(sr, 2).toString());
        empln.setText(pm.getValueAt(sr, 1).toString());
        empid1.setText(pm.getValueAt(sr, 0).toString());
        try{
            conn = db.db();
            pst = conn.prepareStatement("SELECT * FROM payroll_schema.emp_tbl WHERE emp_id = ? ;");
            pst.setString(1,empid1.getText());
            rs = pst.executeQuery();

            while(rs.next()){
                empmn.setText(rs.getString("middlename"));
                age.setText(rs.getString("age"));
                    birthday.setText(rs.getString("birthday"));
                    sex.setSelectedItem(rs.getString("gender"));
                    ms.setSelectedItem(rs.getString("marital_status"));
                    religion.setSelectedItem(rs.getString("religion"));
                    citizenship.setSelectedItem(rs.getString("citizenship"));
                    contact_no.setText(rs.getString("contact_no"));
                    email_add.setText(rs.getString("email_add"));
                    cAddress.setText(rs.getString("current_address"));
                    pAddress.setText(rs.getString("permanent_address"));
                    nameicoe.setText(rs.getString("name_icoe"));
                    relicoe.setText(rs.getString("relationship_icoe"));
                    conicoe.setText(rs.getString("contact_no_icoe"));
                    addicoe.setText(rs.getString("address_icoe"));
                    de.setSelectedItem(rs.getString("department"));
                    po.setSelectedItem(rs.getString("position"));
                    doc.setText(rs.getString("date_of_commencement"));
                    sar.setText(rs.getString("hourly_rate"));
                    bs.setText(rs.getString("basic_salary"));
                    status.setSelectedItem(rs.getString("status"));
                    noc.setText(rs.getString("no_of_child"));
                    byte[] img1 = rs.getBytes("photo");
                    ImageIcon imageIcon = new ImageIcon(new ImageIcon(img1).getImage().getScaledInstance(img.getWidth(), img.getHeight(), Image.SCALE_SMOOTH));
                    img.setIcon(imageIcon);
                    person_image = img1;
            }
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        
        //</editor-fold>
    }//GEN-LAST:event_tableMouseReleased

    private void newempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newempActionPerformed
        // TODO add your handling code here:
        int p = JOptionPane.showConfirmDialog(null, "Do you want to add an employee?","Add Record",JOptionPane.YES_NO_OPTION);
        if(p == 0){
            try{
                conn = db.db();
                pst = conn.prepareStatement("SELECT * FROM payroll_schema.emp_tbl  ORDER BY emp_id DESC Limit 1;");
                rs = pst.executeQuery();
                
                while(rs.next()){
                 int recentid  = rs.getInt("emp_id");
                 int newid = recentid + 1;
                 empid1.setText(""+newid);
                }
            }
            catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                state = 1;
                empid1.setEditable(true);
                empfn.setEditable(true);
                empln.setEditable(true);
                empmn.setEditable(true);
                age.setEditable(true);
                birthday.setEditable(true);
                sex.setSelectedIndex(0);
                ms.setSelectedIndex(0);
                religion.setSelectedIndex(0);
                citizenship.setSelectedIndex(0);
                contact_no.setEditable(true);
                email_add.setEditable(true);
                cAddress.setEditable(true);
                pAddress.setEditable(true);
                nameicoe.setEditable(true);
                relicoe.setEditable(true);
                conicoe.setEditable(true);
                addicoe.setEditable(true);
                piid.setEditable(true);
                sssid.setEditable(true);
                phid.setEditable(true);
                tinid.setEditable(true);
                po.setSelectedIndex(0);
                de.setSelectedIndex(0);
                doc.setEditable(true);
                sar.setEditable(true);
                bs.setEditable(true);
                status.setSelectedIndex(0);
                noc.setEditable(true);
                id.setEditable(true);
                img.setIcon(null);
                save.setEnabled(true);
                cancel.setEnabled(true);
                attach.setEnabled(true);
                newemp.setEnabled(false);
                editemp.setEnabled(false);
                empfn.setText("");
                empln.setText("");
                empmn.setText("");
                age.setText("");
                birthday.setText("");
                contact_no.setText("");
                email_add.setText("");
                cAddress.setText("");
                pAddress.setText("");
                nameicoe.setText("");
                relicoe.setText("");
                conicoe.setText("");
                addicoe.setText("");
                piid.setText("");
                sssid.setText("");
                phid.setText("");
                tinid.setText("");
                doc.setText("");
                sar.setText("");
                bs.setText("");
                noc.setText("");
                id.setEditable(false);
                table.setEnabled(false);
                refresh4.setEnabled(false);
        }
    }//GEN-LAST:event_newempActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        if(state == 1){
        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to add this employee?","Add Record",JOptionPane.YES_NO_OPTION);
        if(p == 0){
                if(empfn.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The last name is empty");
                }
                if(empln.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The first name is empty");
                }
                if(empmn.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The middle name is empty");
                }
                if(age.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The age is empty");
                }
                if(birthday.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The birthday is empty");
                }
                if(sex.getSelectedItem().toString().equals("Select")){
                    JOptionPane.showMessageDialog(null, "The gender is not selected");
                }
                if(ms.getSelectedItem().toString().equals("Select")){
                    JOptionPane.showMessageDialog(null, "The marital status is not selected");
                }
                if(religion.getSelectedItem().toString().equals("Select")){
                    JOptionPane.showMessageDialog(null, "The religion is not selected");
                }
                if(citizenship.getSelectedItem().toString().equals("Select")){
                    JOptionPane.showMessageDialog(null, "The citizenship is not selected");
                }
                if(contact_no.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The contact number is empty");
                }
                if(email_add.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The email address is empty");
                }
                if(cAddress.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The current address is empty");
                }
                if(pAddress.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The permanent address is empty");
                }
                if(po.getSelectedItem().toString().equals("Select")){
                    JOptionPane.showMessageDialog(null, "The position is not selected");
                }
                if(de.getSelectedItem().toString().equals("Select")){
                    JOptionPane.showMessageDialog(null, "The department is not selected");
                }
                if(doc.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The date of commencment is empty");
                }
                if(sar.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The salary rate is empty");
                }
                if(bs.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "The basic salery is empty");
                }
                if(!empid1.getText().equals("") && !empfn.getText().equals("") && !empln.getText().equals("") && !empmn.getText().equals("") && !age.getText().equals("") && !birthday.getText().equals("") && !sex.getSelectedItem().toString().equals("Select") && !ms.getSelectedItem().toString().equals("Select") && !religion.getSelectedItem().toString().equals("Select") && !citizenship.getSelectedItem().toString().equals("Select") && !contact_no.getText().equals("") && !email_add.getText().equals("") && !cAddress.getText().equals("") && !pAddress.getText().equals("") && !po.getSelectedItem().toString().equals("Select") && !de.getSelectedItem().toString().equals("Select") && !doc.getText().equals("") && !sar.getText().equals("") && !bs.getText().equals("") && !status.getSelectedItem().toString().equals("Select")){
                
                    java.util.Date cd1 = GregorianCalendar.getInstance().getTime();
                    SimpleDateFormat mf1 = new SimpleDateFormat("MM/dd/yyyy");
                    String dt = mf1.format(cd1);
                    String mnth = dt.substring(0, 2);
                    String dy = dt.substring(3, 5);
                    String yr = dt.substring(6, 10);
                    Integer m = Integer.parseInt(mnth);
                    Integer d = Integer.parseInt(dy);
                    Integer y = Integer.parseInt(yr);
                    String code = m+""+y+"PYRLL";
                    
                    if ( m != 12){
                        month = m +1;
                        year = y;
                    }else{
                        month = 1;
                        year = y + 1;
                    }
                    day = 28;
            
            
                String pd = piid.getText();
                String sd = sssid.getText();
                String hd = phid.getText();
                String td = tinid.getText();
                String di = empid1.getText();
                //////////////////////////
                String l = empfn.getText();
                String f = empln.getText();
                String mn = empmn.getText();
                String ae = age.getText();
                String bt = birthday.getText();
                String sx = sex.getSelectedItem().toString();
                String mt = ms.getSelectedItem().toString();
                String rg = religion.getSelectedItem().toString();
                String cz = citizenship.getSelectedItem().toString();
                String ca = contact_no.getText();
                String mi = email_add.getText();
                String cad = cAddress.getText();
                String pad = pAddress.getText();
                String nc = nameicoe.getText();
                String rc = relicoe.getText();
                String co = conicoe.getText();
                String ao = addicoe.getText();
                String ps = po.getSelectedItem().toString();
                String dp = de.getSelectedItem().toString();
                String dc = doc.getText();
                String sl = sar.getText();
                String bl = bs.getText();
                String su = status.getSelectedItem().toString();
                String on = noc.getText();
            try{
                
                conn = db.db();
                pst = conn.prepareStatement("INSERT INTO payroll_schema.emp_tbl "
                        + "(emp_id,lastname,firstname,middlename,age,birthday,"
                        + "gender,marital_status,religion,citizenship,current_address,"
                        + "permanent_address,email_add,contact_no,name_icoe,relationship_icoe,"
                        + "contact_no_icoe,address_icoe,sss_id,pagibig_id,philhealth_id,tax_id,"
                        + "department,position,date_of_commencement,"
                        + "hourly_rate,basic_salary,status,no_of_child,photo) "
                        + "VALUES "
                        + "("+di+",'"+l+"','"+f+"','"+mn+"',"+ae+",'"+bt+"',"
                        + "'"+sx+"','"+mt+"','"+rg+"','"+cz+"','"+cad+"',"
                        + "'"+pad+"','"+mi+"',"+ca+",'"+nc+"','"+rc+"',"
                        + ""+co+",'"+ao+"','"+sd+"','"+pd+"','"+hd+"','"+td+"','"+dp+"','"+ps+"','"+dc+"',"
                        + ""+sl+","+bl+",'"+su+"',"+on+",?);");
                pst.setBytes(1, person_image);

                pst.execute();
            }
            catch(Exception e){JOptionPane.showMessageDialog(null,e);}
            
            
            double givenValue = Double.parseDouble(bs.getText());
            
            //for pagibig computation
            try{
                conn1 = db.db();
                pst1 = conn1.prepareStatement("Select * From payroll_schema.subpagibig_tbl");
                rs1 = pst1.executeQuery();
                while(rs1.next()){
                    if(givenValue >= rs1.getDouble("pagibig_min") && givenValue <= rs1.getDouble("pagibig_max")){
                        double pgrate = rs1.getInt("ee_rate");
                        deduc1 = (givenValue * pgrate)/100;
                        //JOptionPane.showMessageDialog(null, deduc1);
                    }else if(!(givenValue >= rs1.getDouble("pagibig_min") && givenValue <= rs1.getDouble("pagibig_max")) && givenValue >= 5000.00){
                        deduc1 = 100.00;
                    }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            
            // for the philhealth computation
            try{
                conn2 = db.db();
                pst2 = conn2.prepareStatement("Select * From payroll_schema.subphilhealth_tbl");
                rs2 = pst2.executeQuery();
                while(rs2.next()){
                    if(givenValue >= rs2.getDouble("philhealth_min") && givenValue <= rs2.getDouble("philhealth_max")){
                        
                        if(givenValue >= 10000.01 && givenValue <= 39999.99){
                            deduc2 = (givenValue * philhealthrate)/100;
                        }else{
                            deduc2 = rs2.getDouble("ee");
                        }
                        //JOptionPane.showMessageDialog(null, deduc2);
                    }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            //for the sss computation 
           try{
                conn3 = db.db();
                pst3 = conn3.prepareStatement("Select * From payroll_schema.subsss_tbl");
                rs3 = pst3.executeQuery();
                while(rs3.next()){
                    if(givenValue >= rs3.getDouble("sss_min") && givenValue <= rs3.getDouble("sss_max")){
                        deduc3 = rs3.getDouble("ee");
                        //JOptionPane.showMessageDialog(null, deduc3);
                    }else if(givenValue < 1000.00){
                        deduc3 = 0.00;
                    }
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
            try{
                    conn4 = db.db();
                    pst4 = conn4.prepareStatement("Select * From payroll_schema.subtax_tbl;");
                    rs4 = pst4.executeQuery();
                    while(rs4.next()){
                        if(givenValue >= rs4.getDouble("tax_min") && givenValue <= rs4.getDouble("tax_max")){
                            basicex = rs4.getDouble("tax_base");
                            //JOptionPane.showMessageDialog(null, basicex+"puta");
                            rate = rs4.getDouble("tax_rate");
                            //JOptionPane.showMessageDialog(null, rate+"ina");
                            excess = rs4.getDouble("tax_excess");
                            //JOptionPane.showMessageDialog(null, excess+"mo");
                            double totala = givenValue - (deduc2 + deduc1 + deduc3);
                            //JOptionPane.showMessageDialog(null, totala+"1");
                            double totalb = totala - basicex;
                            //JOptionPane.showMessageDialog(null, totalb+"2");
                            double totalc = (totalb * rate)/100;
                            //JOptionPane.showMessageDialog(null, totalc+"3");
                            double total = totalc + excess;
                            //JOptionPane.showMessageDialog(null, total+"4");
                            
                            deduc4 = total;
                        }
                    }
                }
                catch(Exception r){JOptionPane.showMessageDialog(null, r);}
            
            
                    try{
                        conn = db.db();
                        pst = conn.prepareStatement("INSERT INTO payroll_schema.account_tbl (emp_acc_id,firstname,lastname) VALUES (?,?,?);");
                        pst.setString(1,empid1.getText());
                        pst.setString(2,empfn.getText());
                        pst.setString(3,empln.getText());
                        pst.execute();
                    }
                    catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                    
                    /*try{
                        conn = db.db();
                        pst = conn.prepareStatement("INSERT INTO payroll_schema.payroll_tbl "
                                + "(pr_code ,emp_id, firstname, lastname,middlename, hourly_rate, basic_salary,"
                                + "sss_deduc,philhealth_deduc,pagibig_deduc,tax_dduc)"
                                + "VALUES (?,?,?,?,?,?,?,?,?,?,?);");
                        pst.setString(1, code);
                        pst.setString(2, empid1.getText());
                        pst.setString(3, empfn.getText());
                        pst.setString(4, empln.getText());
                        pst.setString(5, empmn.getText());
                        pst.setString(6,sar.getText());
                        pst.setString(7,bs.getText());
                        pst.setString(8, String.valueOf(deduc3));
                        pst.setString(9, String.valueOf(deduc2));
                        pst.setString(10,String.valueOf(deduc1));
                        pst.setString(12,String.valueOf(deduc4));
                        
                        pst.execute();
                    }
                    catch(Exception e1){JOptionPane.showMessageDialog(null, e1);}*/
                    try{
                                conn = db.db();
                                pst = conn.prepareStatement("insert into payroll_schema.payroll_tbl "
                                        + " values "
                                        + "('"+code+"',"//1
                                        + ""+empid1.getText()+","//2
                                        + "'"+empfn.getText()+"',"//3
                                        + "'"+empln.getText()+"',"//4
                                        + "'"+empmn.getText()+"',"//5
                                        + ""+sar.getText()+","//6
                                        + ""+bs.getText()+","//7
                                        + "0,0,0,0,"//8-11
                                        + ""+String.valueOf(deduc3)+","+String.valueOf(deduc2)+","+String.valueOf(deduc1)+","+String.valueOf(deduc4)+","//12-15
                                        + "0,0,0,0,"//16-19
                                        + "0,null,"//20-21
                                        + "'"+month+"/"+day+"/"+year+"',"//22
                                        + "0,0,0,"//23-25
                                        + "0);");//26
                                pst.execute();
                            }
                    catch(Exception e1){JOptionPane.showMessageDialog(null, e1);}
                    try{
                        conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.position_tbl WHERE position = ?;");
                        pst.setString(1, po.getSelectedItem().toString());
                        rs = pst.executeQuery();
                        while(rs.next()){
                            String pt = rs.getString("position");
                            int noe = rs.getInt("no_of_emp");
                            int k = noe+1;
                            String nnoe  = String.valueOf(k);
                            try{
                                conn = db.db();
                                pst = conn.prepareStatement("UPDATE payroll_schema.position_tbl SET no_of_emp = ? WHERE position = '"+pt+"';");
                                pst.setString(1, nnoe);
                                pst.execute();
                            }
                            catch(Exception  e){JOptionPane.showMessageDialog(null, e);}
                        }
                    }
                    catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                
            JOptionPane.showMessageDialog(null,"Employee is added successfully");
            
            empid1.setEditable(false);
                empfn.setEditable(false);
                empln.setEditable(false);
                empmn.setEditable(false);
                age.setEditable(false);
                birthday.setEditable(false);
                sex.setSelectedIndex(0);
                ms.setSelectedIndex(0);
                religion.setSelectedIndex(0);
                citizenship.setSelectedIndex(0);
                contact_no.setEditable(false);
                email_add.setEditable(false);
                cAddress.setEditable(false);
                pAddress.setEditable(false);
                nameicoe.setEditable(false);
                relicoe.setEditable(false);
                conicoe.setEditable(false);
                addicoe.setEditable(false);
                piid.setEditable(false);
                sssid.setEditable(false);
                phid.setEditable(false);
                tinid.setEditable(false);
                po.setSelectedIndex(0);
                de.setSelectedIndex(0);
                doc.setEditable(false);
                sar.setEditable(false);
                bs.setEditable(false);
                status.setSelectedIndex(0);
                noc.setEditable(false);
                id.setEditable(false);
                img.setIcon(null);
                save.setEnabled(false);
                cancel.setEnabled(false);
                attach.setEnabled(false);
                newemp.setEnabled(true);
                editemp.setEnabled(true);
            table();
            state = 0;
            }
        }
        }else if(state == 2){
            int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to update the detail of this employee?","Update Record",JOptionPane.YES_NO_OPTION);
            if(p == 0){
                String pd = piid.getText();
                String sd = sssid.getText();
                String hd = phid.getText();
                String td = tinid.getText();
                String di = empid1.getText();
                String f = empfn.getText();
                String l = empln.getText();
                String m = empmn.getText();
                String ae = age.getText();
                String bt = birthday.getText();
                String sx = sex.getSelectedItem().toString();
                String mt = ms.getSelectedItem().toString();
                String rg = religion.getSelectedItem().toString();
                String cz = citizenship.getSelectedItem().toString();
                String ca = contact_no.getText();
                String mi = email_add.getText();
                String cad = cAddress.getText();
                String pad = pAddress.getText();
                String nc = nameicoe.getText();
                String rc = relicoe.getText();
                String co = conicoe.getText();
                String ao = addicoe.getText();
                String ps = po.getSelectedItem().toString();
                String dp = de.getSelectedItem().toString();
                String dc = doc.getText();
                String sl = sar.getText();
                String bl = bs.getText();
                String su = status.getSelectedItem().toString();
                java.util.Date gre = GregorianCalendar.getInstance().getTime();
                SimpleDateFormat mf = new SimpleDateFormat("MMyyyy");
                String dt = mf.format(gre);
                String mnth = dt.substring(0, 2);
                String yr = dt.substring(2,6);
                Integer s = Integer.parseInt(mnth);
                Integer y = Integer.parseInt(yr);
                String code  = s+""+y+"PYRLL";
                String on = noc.getText();
                try{
                    /*try{

                        conn = db.db();
                        pst = conn.prepareStatement("INSERT INTO payroll_schema.emp_tbl "
                                + "(emp_id,lastname,firstname,middlename,age,birthday,"
                                + "gender,marital_status,religion,citizenship,current_address,"
                                + "permanent_address,email_add,contact_no,name_icoe,relationship_icoe,"
                                + "contact_no_icoe,address_icoe,sss_id,pagibig_id,philhealth_id,tax_id,"
                                + "department,position,date_of_commencement,"
                                + "hourly_rate,basic_salary,status,no_of_child,photo) "
                                + "VALUES "
                                + "("+di+",'"+l+"','"+f+"','"+m+"',"+ae+",'"+bt+"',"
                                + "'"+sx+"','"+mt+"','"+rg+"','"+cz+"','"+cad+"',"
                                + "'"+pad+"','"+mi+"',"+ca+",'"+nc+"','"+rc+"',"
                                + ""+co+",'"+ao+"','"+sd+"','"+pd+"','"+hd+"','"+td+"','"+dp+"','"+ps+"','"+dc+"',"
                                + ""+sl+","+bl+",'"+su+"',"+on+",?);");
                        pst.setBytes(1, person_image);

                        pst.execute();
                    }
                    catch(Exception e){}*/


                    double givenValue = Double.parseDouble(bs.getText());

                    //for pagibig computation
                    try{
                        conn1 = db.db();
                        pst1 = conn1.prepareStatement("Select * From payroll_schema.subpagibig_tbl");
                        rs1 = pst1.executeQuery();
                        while(rs1.next()){
                            if(givenValue >= rs1.getDouble("pagibig_min") && givenValue <= rs1.getDouble("pagibig_max")){
                                double pgrate = rs1.getInt("ee_rate");
                                deduc1 = (givenValue * pgrate)/100;
                                //JOptionPane.showMessageDialog(null, deduc1);
                            }else if(!(givenValue >= rs1.getDouble("pagibig_min") && givenValue <= rs1.getDouble("pagibig_max")) && givenValue >= 5000.00){
                                deduc1 = 100.00;
                            }
                        }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }

                    // for the philhealth computation
                    try{
                        conn2 = db.db();
                        pst2 = conn2.prepareStatement("Select * From payroll_schema.subphilhealth_tbl");
                        rs2 = pst2.executeQuery();
                        while(rs2.next()){
                            if(givenValue >= rs2.getDouble("philhealth_min") && givenValue <= rs2.getDouble("philhealth_max")){

                                if(givenValue >= 10000.01 && givenValue <= 39999.99){
                                    deduc2 = (givenValue * philhealthrate)/100;
                                }else{
                                    deduc2 = rs2.getDouble("ee");
                                }
                                //JOptionPane.showMessageDialog(null, deduc2);
                            }
                        }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }
                    //for the sss computation 
                   try{
                        conn3 = db.db();
                        pst3 = conn3.prepareStatement("Select * From payroll_schema.subsss_tbl");
                        rs3 = pst3.executeQuery();
                        while(rs3.next()){
                            if(givenValue >= rs3.getDouble("sss_min") && givenValue <= rs3.getDouble("sss_max")){
                                deduc3 = rs3.getDouble("ee");
                                //JOptionPane.showMessageDialog(null, deduc3);
                            }else if(givenValue < 1000.00){
                                deduc3 = 0.00;
                            }
                        }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }
                    try{
                            conn4 = db.db();
                            pst4 = conn4.prepareStatement("Select * From payroll_schema.subtax_tbl;");
                            rs4 = pst4.executeQuery();
                            while(rs4.next()){
                                if(givenValue >= rs4.getDouble("tax_min") && givenValue <= rs4.getDouble("tax_max")){
                                    basicex = rs4.getDouble("tax_base");
                                    //JOptionPane.showMessageDialog(null, basicex+"puta");
                                    rate = rs4.getDouble("tax_rate");
                                    //JOptionPane.showMessageDialog(null, rate+"ina");
                                    excess = rs4.getDouble("tax_excess");
                                    //JOptionPane.showMessageDialog(null, excess+"mo");
                                    double totala = givenValue - (deduc2 + deduc1 + deduc3);
                                    //JOptionPane.showMessageDialog(null, totala+"1");
                                    double totalb = totala - basicex;
                                    //JOptionPane.showMessageDialog(null, totalb+"2");
                                    double totalc = (totalb * rate)/100;
                                    //JOptionPane.showMessageDialog(null, totalc+"3");
                                    double total = totalc + excess;
                                    //JOptionPane.showMessageDialog(null, total+"4");

                                    deduc4 = total;
                                }
                            }
                        }
                        catch(Exception r){JOptionPane.showMessageDialog(null, r);}
                    try{ 
                        conn = db.db();
                        pst = conn.prepareStatement("UPDATE payroll_schema.emp_tbl SET "
                                + "lastname ='"+l+"', "
                                + "firstname = '"+f+"',"
                                + "middlename = '"+m+"', "
                                + "age = "+ae+", "
                                + "birthday = '"+bt+"', "
                                + "gender = '"+sx+"', "
                                + "marital_status = '"+mt+"', "
                                + "religion = '"+rg+"', "
                                + "citizenship = '"+cz+"', "
                                + "contact_no = "+ca+", "
                                + "email_add = '"+mi+"', "
                                + "current_address = '"+cad+"',"
                                + "permanent_address = '"+pad+"', "
                                + "name_icoe = '"+nc+"', "
                                + "relationship_icoe = '"+rc+"', "
                                + "contact_no_icoe = "+co+", "
                                + "address_icoe = '"+ao+"', "
                                + "sss_id = '"+sd+"', "
                                + "pagibig_id = '"+pd+"', "
                                + "philhealth_id = '"+hd+"', "
                                + "tax_id = '"+td+"', "
                                + "position = '"+ps+"', "
                                + "department = '"+dp+"', "
                                + "date_of_commencement = '"+dc+"', "
                                + "hourly_rate = "+sl+", "
                                + "basic_salary = "+bl+", "
                                + "status = '"+su+"', "
                                + "no_of_child = "+on+", "
                                + "photo = ? WHERE emp_id = "+di+";");
                        pst.setBytes(1, person_image);
                        pst.execute();
                    }
                    catch(Exception e){JOptionPane.showMessageDialog(null, e);}
                    
                      try{
                                conn = db.db();
                                pst = conn.prepareStatement("insert into payroll_schema.payroll_tbl "
                                        + " values "
                                        + "('"+code+"',"//1
                                        + ""+empid1.getText()+","//2
                                        + "'"+empln.getText()+"',"//3
                                        + "'"+empfn.getText()+"',"//4
                                        + "'"+empmn.getText()+"',"//5
                                        + ""+sar.getText()+","//6
                                        + ""+bs.getText()+","//7
                                        + "0,0,0,0,"//8-11
                                        + ""+String.valueOf(deduc3)+","+String.valueOf(deduc2)+","+String.valueOf(deduc1)+","+String.valueOf(deduc4)+","//12-15
                                        + "0,0,0,0,"//16-19
                                        + "0,null,"//20-21
                                        + "'"+month+"/"+day+"/"+year+"',"//22
                                        + "0,0,0,"//23-25
                                        + "0);");//26
                                pst.execute();
                            }
                    catch(Exception e1){JOptionPane.showMessageDialog(null, e1);}
                    try{
                        conn = db.db();
                        pst = conn.prepareStatement("UPDATE payroll_schema.account_tbl SET firstname = ?, "
                            + "lastname = ? WHERE emp_acc_id = ?");
                        pst.setString(3, id.getText());
                        pst.setString(1, empln.getText());
                        pst.setString(2, empfn.getText());
                        pst.execute();
                        
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
                catch(Exception a){JOptionPane.showMessageDialog(null, "Something Went Wrong, Can't Udpate Details");}
            JOptionPane.showMessageDialog(null, "Updated Succesfully");
            table();
                empid1.setEditable(false);
                empfn.setEditable(false);
                empln.setEditable(false);
                empmn.setEditable(false);
                age.setEditable(false);
                birthday.setEditable(false);
                contact_no.setEditable(false);
                email_add.setEditable(false);
                cAddress.setEditable(false);
                pAddress.setEditable(false);
                nameicoe.setEditable(false);
                relicoe.setEditable(false);
                conicoe.setEditable(false);
                addicoe.setEditable(false);
                piid.setEditable(false);
                sssid.setEditable(false);
                phid.setEditable(false);
                tinid.setEditable(false);
                doc.setEditable(false);
                sar.setEditable(false);
                bs.setEditable(false);
                noc.setEditable(false);
                id.setEditable(false);
                img.setIcon(null);
                save.setEnabled(false);
                cancel.setEnabled(false);
                attach.setEnabled(false);
                newemp.setEnabled(true);
                editemp.setEnabled(true);
                id.setEditable(true);
                table.setEnabled(true);
                refresh4.setEnabled(true);
                state = 0;
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void attachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachActionPerformed
        // TODO add your handling code here:
        // <editor-fold defaultstate="collapsed" desc="Attach photo">
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        filename = f.getAbsolutePath();
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(img.getWidth(), img.getHeight(), Image.SCALE_DEFAULT));
        img.setIcon(imageIcon);

        try{
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for(int readNum; (readNum=fis.read(buf))!=-1;){
                bos.write(buf,0,readNum);
            }
            person_image=bos.toByteArray();
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        //</editor-fold>
    }//GEN-LAST:event_attachActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        int p = JOptionPane.showConfirmDialog(null, "Do you want to cancel?","Caution",JOptionPane.YES_NO_OPTION);
        if(p == 0){
                empid1.setEditable(false);
                empfn.setEditable(false);
                empln.setEditable(false);
                empmn.setEditable(false);
                age.setEditable(false);
                birthday.setEditable(false);
                sex.setSelectedIndex(0);
                ms.setSelectedIndex(0);
                religion.setSelectedIndex(0);
                citizenship.setSelectedIndex(0);
                contact_no.setEditable(false);
                email_add.setEditable(false);
                cAddress.setEditable(false);
                pAddress.setEditable(false);
                nameicoe.setEditable(false);
                relicoe.setEditable(false);
                conicoe.setEditable(false);
                addicoe.setEditable(false);
                piid.setEditable(false);
                sssid.setEditable(false);
                phid.setEditable(false);
                tinid.setEditable(false);
                po.setSelectedIndex(0);
                de.setSelectedIndex(0);
                doc.setEditable(false);
                sar.setEditable(false);
                bs.setEditable(false);
                status.setSelectedIndex(0);
                noc.setEditable(false);
                id.setEditable(false);
                img.setIcon(null);
                save.setEnabled(false);
                cancel.setEnabled(false);
                newemp.setEnabled(true);
                editemp.setEnabled(true);
                attach.setEnabled(false);
                
                empid1.setText("");
                empfn.setText("");
                empln.setText("");
                empmn.setText("");
                age.setText("");
                birthday.setText("");
                contact_no.setText("");
                email_add.setText("");
                cAddress.setText("");
                pAddress.setText("");
                nameicoe.setText("");
                relicoe.setText("");
                conicoe.setText("");
                addicoe.setText("");
                piid.setText("");
                sssid.setText("");
                phid.setText("");
                tinid.setText("");
                doc.setText("");
                sar.setText("");
                bs.setText("");
                noc.setText("");
                id.setEditable(true);
                table.setEnabled(true);
                refresh4.setEnabled(true);
                state = 0;
        }
    }//GEN-LAST:event_cancelActionPerformed

    private void editempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editempActionPerformed
        // TODO add your handling code here:
        if(empid1.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please select Employee to update");
        }else{
        int p = JOptionPane.showConfirmDialog(null, "Do you want to update an employee?","Update Record",JOptionPane.YES_NO_OPTION);
        if(p == 0){
                empid1.setEditable(true);
                empfn.setEditable(true);
                empln.setEditable(true);
                empmn.setEditable(true);
                age.setEditable(true);
                birthday.setEditable(true);
                contact_no.setEditable(true);
                email_add.setEditable(true);
                cAddress.setEditable(true);
                pAddress.setEditable(true);
                nameicoe.setEditable(true);
                relicoe.setEditable(true);
                conicoe.setEditable(true);
                addicoe.setEditable(true);
                piid.setEditable(true);
                sssid.setEditable(true);
                phid.setEditable(true);
                tinid.setEditable(true);
                doc.setEditable(true);
                sar.setEditable(true);
                bs.setEditable(true);
                noc.setEditable(true);
                id.setEditable(true);
                save.setEnabled(true);
                cancel.setEnabled(true);
                attach.setEnabled(true);
                newemp.setEnabled(false);
                editemp.setEnabled(false);
                id.setEditable(false);
                table.setEnabled(false);
                refresh4.setEnabled(false);
               state = 2;
        }
        }
    }//GEN-LAST:event_editempActionPerformed

    private void poActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poActionPerformed
        // TODO add your handling code here:
        if(state == 1 || state == 2){
        try{
            conn = db.db();
            pst = conn.prepareStatement("SELECT * FROM payroll_schema.position_tbl WHERE position = '"+po.getSelectedItem().toString()+"';");
            rs = pst.executeQuery();
            while(rs.next()){
                sar.setText(rs.getString("hourly_rate"));
                bs.setText(rs.getString("basic_salary"));
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null ,e);
        }
        }
    }//GEN-LAST:event_poActionPerformed

    private void ageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageKeyTyped
        // TODO add your handling code here:
        char character = evt.getKeyChar();
        if(((character < '0') || (character > '9') && (character != '\b'))){
            evt.consume();
        }
    }//GEN-LAST:event_ageKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                employee dialog = new employee(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Jlabel;
    private javax.swing.JTextField addicoe;
    private javax.swing.JTextField age;
    private javax.swing.JButton attach;
    private javax.swing.JTextField birthday;
    private javax.swing.JTextField bs;
    private javax.swing.JTextField cAddress;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox<String> citizenship;
    private javax.swing.JTextField conicoe;
    private javax.swing.JTextField contact_no;
    private javax.swing.JComboBox<String> de;
    private javax.swing.JTextField doc;
    private javax.swing.JButton editemp;
    private javax.swing.JTextField email_add;
    private javax.swing.JTextField empfn;
    private javax.swing.JTextField empid1;
    private javax.swing.JTextField empln;
    private javax.swing.JTextField empmn;
    private javax.swing.JTextField id;
    private javax.swing.JLabel img;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> ms;
    private javax.swing.JTextField nameicoe;
    private javax.swing.JButton newemp;
    private javax.swing.JTextField noc;
    private javax.swing.JTextField pAddress;
    private javax.swing.JTextField phid;
    private javax.swing.JTextField piid;
    public static javax.swing.JComboBox<String> po;
    private javax.swing.JButton refresh4;
    private javax.swing.JTextField relicoe;
    private javax.swing.JComboBox<String> religion;
    private javax.swing.JTextField sar;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> sex;
    private javax.swing.JTextField sssid;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTable table;
    private javax.swing.JTextField tinid;
    // End of variables declaration//GEN-END:variables
public String getValue(String title){
    String value = "";
        try{
            prop.load(new FileInputStream("config.properties"));
            value = prop.getProperty(title);
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, "2");}
        return value;
}
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package payroll.secSubWins;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import payroll.main.db;
/**
 *
 * @author ASUS
 */
public class updateOt extends javax.swing.JDialog {
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
    /**
     * Creates new form updateOt
     */
    public updateOt(javax.swing.JDialog parent, boolean modal, String last, String first, String ids,String date, String logi,String logo) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        id.setText(ids);
        ln.setText(last);
        fn.setText(first);
        dt.setText(date);
        otti.setText(logi);
        otto.setText(logo);
        
        
        
        detail();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        id = new javax.swing.JTextField();
        fn = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        ln = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        otti = new javax.swing.JTextField();
        dt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        twh = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        otto = new javax.swing.JTextField();
        st = new javax.swing.JComboBox<>();
        an = new javax.swing.JRadioButton();
        al = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        salary = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        period = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        trph = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        trph1 = new javax.swing.JTextField();
        otrate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Overtime");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Over Time Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        id.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel26.setText("First Name:");

        jLabel25.setText("Last Name:");

        jLabel8.setText("Date");

        jLabel12.setText("Time In");

        otti.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        otti.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        dt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setText("ID:");

        jLabel13.setText("Time Of Work");

        twh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        twh.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel14.setText("to");

        jLabel2.setText("Type of Over Time");

        jLabel15.setText("Time out");

        otto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        otto.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        st.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Regular OT", "Rest Day OT", "Holiday OT", "Holiday Rest Day OT" }));
        st.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stItemStateChanged(evt);
            }
        });

        an.setBackground(new java.awt.Color(255, 255, 255));
        an.setText("Add Now");
        an.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anActionPerformed(evt);
            }
        });

        al.setBackground(new java.awt.Color(255, 255, 255));
        al.setText("Add Later");
        al.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fn, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                                    .addComponent(ln)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(an)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(twh, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(al))
                                    .addComponent(st, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(otti, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(otto)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(dt)
                                .addGap(68, 68, 68))))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(otto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(dt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(otti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(twh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(st, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(an)
                    .addComponent(al))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "OverTime Computation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        salary.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        total.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        period.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        period.setText("260");

        day.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        day.setText("8");

        trph.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        time.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        trph1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        otrate.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setText("/");

        jLabel7.setText("/");

        jLabel9.setText("=");

        jLabel10.setText("x");

        jLabel11.setText("x");

        jLabel16.setText("Salary");

        jLabel17.setText("Days");

        jLabel18.setText("Hour");

        jLabel19.setText("Total rate per hour");

        jLabel20.setText("Total rate per hour");

        jLabel21.setText("Time");

        jLabel22.setText("OT Rate");

        jLabel23.setText("Total");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(period, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel7)
                                .addGap(4, 4, 4)
                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(trph, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel20))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(10, 10, 10)
                                                .addComponent(trph1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(4, 4, 4)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel22))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(otrate, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addComponent(jLabel19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(period, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(jLabel19)
                        .addComponent(jLabel17)))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trph1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jLabel23))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stItemStateChanged
        // TODO add your handling code here:
        // <editor-fold defaultstate="collapsed" desc="Compute Details of Employee's Overtime">
        if(st.getSelectedItem().toString().equals("Select")){
            otrate.setText("");
            total.setText("");
        }
        if(st.getSelectedItem().toString().equals("Regular OT")){
            otrate.setText("1.25");
            Integer t = Integer.parseInt(time.getText());
            Double tr = Double.parseDouble(trph1.getText());
            Double or = Double.parseDouble(otrate.getText());
            double to1 = t*tr*or;
            total.setText(to1+"");
        }
        if(st.getSelectedItem().toString().equals("Rest Day OT")){
            otrate.setText("1.3");
            Integer t = Integer.parseInt(time.getText());
            Double tr = Double.parseDouble(trph1.getText());
            Double or = Double.parseDouble(otrate.getText());
            double to1 = t*tr*or;
            total.setText(to1+"");
        }
        if(st.getSelectedItem().toString().equals("Holiday OT")){
            otrate.setText("2.0");
            Integer t = Integer.parseInt(time.getText());
            Double tr = Double.parseDouble(trph1.getText());
            Double or = Double.parseDouble(otrate.getText());
            double to1 = t*tr*or;
            total.setText(to1+"");
        }
        if(st.getSelectedItem().toString().equals("Holiday Rest Day OT")){
            otrate.setText("2.5");
            Integer t = Integer.parseInt(time.getText());
            Double tr = Double.parseDouble(trph1.getText());
            Double or = Double.parseDouble(otrate.getText());
            double to1 = t*tr*or;
            total.setText(to1+"");
        }
        //</editor-fold>
    }//GEN-LAST:event_stItemStateChanged

    private void anActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anActionPerformed
        // TODO add your handling code here:
        an.setSelected(true);
        al.setSelected(false);
    }//GEN-LAST:event_anActionPerformed

    private void alActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alActionPerformed
        // TODO add your handling code here:
        al.setSelected(true);
        an.setSelected(false);
    }//GEN-LAST:event_alActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // <editor-fold defaultstate="collapsed" desc="Update Details of Employee's Overtime">
        int p = JOptionPane.showConfirmDialog(null, "Are you sure you want to update the Type of Over Time of this employee?","Update Record",JOptionPane.YES_NO_OPTION);
        if(p == 0){
            if(!an.isSelected() && !al.isSelected() || st.getSelectedItem().toString().equals("Select")){
                JOptionPane.showMessageDialog(null, "Please Select If Add Now or Add Later and What Type of Overtime");
            }else if(an.isSelected()){
                
                    java.util.Date cd = GregorianCalendar.getInstance().getTime();
                    SimpleDateFormat mf = new SimpleDateFormat("MMyyyy");
                    String dtm = mf.format(cd);
                    String mnth = dtm.substring(0, 2);
                    String yr = dtm.substring(2,6);
                    Integer m = Integer.parseInt(mnth);
                    Integer y = Integer.parseInt(yr);
                    
                try{
                    
                    conn = db.db();
                    pst = conn.prepareStatement("UPDATE payroll_schema.overtime_tbl SET status = 'Recorded' , ot_type = ?, twh = ? where id = ? and lastname = ? and  firstname = ? and ot_date = ? and ot_login = ? and ot_logout = ?; ");
                    
                    
                    pst.setString(1,st.getSelectedItem().toString());
                    pst.setString(2,twh.getText());
                    
                    pst.setString(6,dt.getText());
                    
                    pst.setString(7,otti.getText());
                    pst.setString(8,otto.getText());
                    
                    
                    pst.setString(3,id.getText());
                    pst.setString(5,fn.getText());
                    pst.setString(4,ln.getText());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Recorded");

                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
                
                
                
                if(st.getSelectedItem().toString().equals("Regular OT")){
                    try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_reg"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a + s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_reg = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "1");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "2");
                        }
                    }
                    if(st.getSelectedItem().toString().equals("Rest Day OT")){
                        try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_rd"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a + s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_rd = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "3");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "4");
                        }
                    }
                    if(st.getSelectedItem().toString().equals("Holiday OT")){
                        try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_hd"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a + s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_hd = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "5");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "6");
                        }
                    }
                    if(st.getSelectedItem().toString().equals("Holiday Rest Day OT")){
                        try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_hdrd"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a + s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_hdrd = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "7");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "7");
                        }
                    }
                    JOptionPane.showMessageDialog(null, "Success");
                
                
                
            }else if(al.isSelected()){
                    java.util.Date cd = GregorianCalendar.getInstance().getTime();
                    SimpleDateFormat mf = new SimpleDateFormat("MMyyyy");
                    String dtm = mf.format(cd);
                    String mnth = dtm.substring(0, 2);
                    String yr = dtm.substring(2,6);
                    Integer m = Integer.parseInt(mnth);
                    Integer y = Integer.parseInt(yr);
                try{
                    conn = db.db();
                    pst = conn.prepareStatement("UPDATE payroll_schema.overtime_tbl SET status = 'Not Yet Recorded' , ot_type = ?, twh = ? where id = ? and lastname = ? and  firstname = ? and ot_date = ? and ot_login = ? and ot_logout = ?; ");
                    pst.setString(1,st.getSelectedItem().toString());
                    pst.setString(2,twh.getText());
                    
                    pst.setString(6,dt.getText());
                    
                    pst.setString(7,otti.getText());
                    pst.setString(8,otto.getText());
                    
                    
                    pst.setString(3,id.getText());
                    pst.setString(5,fn.getText());
                    pst.setString(4,ln.getText());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Recorded can add to payroll later");
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
                
                
                
                if(st.getSelectedItem().toString().equals("Regular OT")){
                    try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_hdrd"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a - s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_hdrd = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "7");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "7");
                        }
                    }
                    if(st.getSelectedItem().toString().equals("Rest Day OT")){
                        try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_rd"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a - s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_rd = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "3");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "4");
                        }
                    }
                    if(st.getSelectedItem().toString().equals("Holiday OT")){
                        try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_hd"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a - s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_hd = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "5");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "6");
                        }
                    }
                    if(st.getSelectedItem().toString().equals("Holiday Rest Day OT")){
                        try{
                            conn = db.db();
                        pst = conn.prepareStatement("SELECT * FROM payroll_schema.payroll_tbl WHERE emp_id = ? and pr_code = ?;");
                        pst.setString(1, id.getText());
                        pst.setString(2, m+""+y+"PYRLL");
                        rs = pst.executeQuery();
                            while(rs.next()){
                                Double a = Double.parseDouble(rs.getString("overtime_hdrd"));
                                Double s = Double.parseDouble(total.getText());
                                double b = a - s;
                                String d = String.valueOf(b);
                                try{
                                    conn = db.db();
                                    pst = conn.prepareStatement("UPDATE payroll_schema.payroll_tbl SET overtime_hdrd = ? WHERE emp_id = ? and pr_code = ?;");
                                    pst.setString(3, m+""+y+"PYRLL");
                                    pst.setString(2, id.getText());
                                    pst.setString(1, d);
                                    pst.execute();
                                }
                                catch(Exception e){
                                    JOptionPane.showMessageDialog(null, "7");
                                }
                            }
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "7");
                        }
                    }
                    JOptionPane.showMessageDialog(null, "Success");
                
                
                
                
                
                
                
                
                
                
                
                
                
            }
        }
        //</editor-fold>
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateOt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                updateOt dialog = new updateOt(new javax.swing.JDialog(), true, null,null,null,null,null,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton al;
    private javax.swing.JRadioButton an;
    private javax.swing.JTextField day;
    private javax.swing.JTextField dt;
    private javax.swing.JTextField fn;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField ln;
    private javax.swing.JTextField otrate;
    private javax.swing.JTextField otti;
    private javax.swing.JTextField otto;
    private javax.swing.JTextField period;
    private javax.swing.JTextField salary;
    private javax.swing.JComboBox<String> st;
    private javax.swing.JTextField time;
    private javax.swing.JTextField total;
    private javax.swing.JTextField trph;
    private javax.swing.JTextField trph1;
    private javax.swing.JTextField twh;
    // End of variables declaration//GEN-END:variables
public void detail(){
    try{
        conn = db.db();
        pst = conn.prepareStatement("SELECT * FROM payroll_schema.timemonitor_tbl WHERE id = "+id.getText()+" and "
            + "lastname = '"+ln.getText()+ "' and "
            + "firstname = '"+fn.getText()+"' and "
            + "date_in = '"+ dt.getText()+"' and "
            + "time_in = '"+otti.getText()+"' and "
            + "time_out = '"+otto.getText()+"';");
        rs = pst.executeQuery();
        while(rs.next()){
            twh.setText(rs.getString("twh"));
            time.setText(rs.getString("twh"));
        }
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }
    try{
        conn = db.db();
        pst = conn.prepareStatement("select * from payroll_schema.emp_tbl where emp_id = ? and lastname = ? and firstname = ? ;");
        pst.setString(1, id.getText());
        pst.setString(2, ln.getText());
        pst.setString(3, fn.getText());
        rs = pst.executeQuery();
        
        while(rs.next()){
            salary.setText(rs.getString("basic_salary"));
            Integer sal = Integer.parseInt(salary.getText());
            Integer per = Integer.parseInt(period.getText());
            Integer days = Integer.parseInt(day.getText());
            double trpht = (sal/per)/days;
            trph.setText(trpht+"");
            trph1.setText(trpht+"");
        }
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }
}
}
